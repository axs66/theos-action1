name: CI

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 1 15 * *'
      timezone: Asia/Shanghai

jobs:
  build-logos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
        include:
          - os: macos-latest
            arch: arm64
          - os: ubuntu-latest
            arch: x64

    # 关键修复点：配置 GNU Make 环境
    env:
      HOMEBREW_PREFIX: /opt/homebrew  # ARM macOS 专用路径
      PATH: ${{ env.HOMEBREW_PREFIX }}/opt/make/libexec/gnubin:${{ env.PATH }}

    steps:
      - name: Setup Homebrew (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo "$HOMEBREW_PREFIX/bin" >> $GITHUB_PATH

      - name: Install GNU Make (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install make
          # 验证安装
          make --version | grep "GNU Make"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: Randomblock1/FleetsBGone
          submodules: recursive
          fetch-depth: 0

      - name: Prepare Theos
        uses: randomblock1/theos-action@main
        with:
          target: ${{ matrix.arch }}

      - name: Build environment check
        run: |
          echo "Using make: $(which make)"
          make --version

      - name: Build package
        run: |
          # 显式使用 GNU Make
          gmake package FINALPACKAGE=1
          # 或使用 alias 后的 make
          # make package FINALPACKAGE=1

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "FleetsBGone_${{ matrix.os }}_${{ matrix.arch }}"
          path: packages/*.deb
          retention-days: 7
