name: CI

on: 
  push:
  schedule:
    - cron: '0 9 15 * *'  # 每月15号的9点UTC触发工作流

jobs:
  build-logos:
    runs-on: ubuntu-latest  # 使用 Ubuntu 环境

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: Randomblock1/FleetsBGone
          submodules: true  # 检出子模块

      - name: Install dependencies and setup Theos
        run: |
          sudo apt-get update
          # 尝试安装 libtinfo5，如果没有找到则安装 libtinfo-dev
          sudo apt-get install -y build-essential fakeroot libz3-dev rsync curl perl unzip git libplist-utils
          if ! dpkg -s libtinfo5 > /dev/null 2>&1; then
            sudo apt-get install -y libtinfo-dev  # 如果 libtinfo5 不存在，安装 libtinfo-dev
          fi

      - name: Setup environment
        run: echo "THEOS=${{ github.workspace }}/theos" >> $GITHUB_ENV

      - name: Download Theos
        run: |
          if [ ! -d "${{ github.workspace }}/theos" ]; then
            git clone https://github.com/roothide/theos ${{ github.workspace }}/theos --recursive
            echo "Theos successfully downloaded."
          else
            echo "Theos already cached."
          fi

      - name: Get toolchain (Linux)
        run: |
          if [[ "$(ls ${{ github.workspace }}/theos/sdks)" ]]; then
            echo "Linux toolchain already cached, skipping..."
          else
            TMP_DL=$(mktemp -d)
            wget --no-verbose https://github.com/kabiroberai/swift-toolchain-linux/releases/download/v2.3.0/swift-5.8-ubuntu22.04.tar.xz -P $TMP_DL
            tar -xvf $TMP_DL/swift-5.8-ubuntu22.04.tar.xz -C ${{ github.workspace }}/theos/toolchain
            rm -Rf $TMP_DL
          fi

      - name: Get SDKs
        run: |
          if [[ "$(ls ${{ github.workspace }}/theos/sdks)" ]]; then
            echo "Theos SDKs already cached, skipping..."
          else
            cd ${{ github.workspace }}/theos/sdks
            wget --no-verbose https://github.com/theos/sdks/archive/master.zip
            unzip -o master.zip  # 使用 unzip 解压
            mv sdks-master/*.sdk ${{ github.workspace }}/theos/sdks
            rm -r master.zip sdks-master
          fi

      - name: Build package
        run: |
          rm -f packages/*  # 清理旧包
          make package FINALPACKAGE=1  # 构建 package

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: "Package built by ubuntu-latest"
          path: ${{ github.workspace }}/packages/*.deb  # 上传生成的 .deb 文件
